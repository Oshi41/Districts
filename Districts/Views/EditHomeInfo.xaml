<Window x:Class="Districts.Views.EditHomeInfo"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Districts.Views"
        xmlns:viewModel="clr-namespace:Districts.ViewModel"
        xmlns:enum="clr-namespace:Districts.ViewModel"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:controls="clr-namespace:Districts.Views.Controls"
        xmlns:converter="clr-namespace:Districts.Views.Converter"
        mc:Ignorable="d" Height="400" Width="300"
        d:DataContext="{d:DesignInstance {x:Type viewModel:EditHomeInfoViewModel}}">

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <converter:EnumToDescrConverter x:Key="DescrConverter" />

        <ObjectDataProvider x:Key="dataFromEnum" MethodName="GetValues"
                            ObjectType="{x:Type viewModel:CountingTypes}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="viewModel:CountingTypes" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        
    </Window.Resources>

    <Window.Title>
        <MultiBinding StringFormat="{}{0} {1}">
            <Binding Path="Home.Street" />
            <Binding Path="Home.HouseNumber" />
        </MultiBinding>
    </Window.Title>


    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />

            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />

            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />

            <RowDefinition Height="Auto" />
            <RowDefinition />

            <RowDefinition Height="Auto" />
            <RowDefinition />

            <RowDefinition Height="Auto" />

        </Grid.RowDefinitions>

        <UniformGrid Columns="1">
            <UniformGrid.ToolTip>
                <TextBlock>
                    <Run Text="Нужно внести список номеров через запятую, либо промежуток с тире"/>
                    <LineBreak/>
                    <Run Text="15,46,55-60"/>
                </TextBlock>
            </UniformGrid.ToolTip>

            <TextBlock Text="Агрессии" />
            <TextBox Grid.Row="1"
                     Text="{Binding Aggresive}"
                     TextChanged="RestrictText" />

            <TextBlock Grid.Row="2"
                       Text="Просили не призодить" />
            <TextBox Grid.Row="3"
                     Text="{Binding NoWorried}"
                     TextChanged="RestrictText" />

            <TextBlock Grid.Row="4"
                       Text="Не посещать" />
            <TextBox Grid.Row="5"
                     Text="{Binding NoVisit}"
                     TextChanged="RestrictText" />

        </UniformGrid>

        <!--UseAlternativeCounting-->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="Visibility" Value="Visible" />

                    <Style.Triggers>
                        <DataTrigger Binding="{Binding CountingAlgorythm}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>


            </Grid.Style>

            <ComboBox x:Name="ComboBox"
                      Margin="0 5 10 5"
                      HorizontalAlignment="Left"
                      MinWidth="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth}"
                      ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Text}"
                      ItemsSource="{Binding Source={StaticResource dataFromEnum}}"
                      SelectedItem="{Binding CountingAlgorythm}">
                <ComboBox.ItemTemplate>
                    <ItemContainerTemplate>
                        <TextBlock Text="{Binding Converter={StaticResource DescrConverter}}" />
                    </ItemContainerTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>

            <mah:NumericUpDown Grid.Column="1"
                               Height="{Binding ElementName=ComboBox, Path=ActualHeight}"
                               VerticalAlignment="Stretch"
                               Minimum="1"
                               NumericInputMode="Decimal"
                               HorizontalAlignment="Right"
                               Value="{Binding Begin}">
                <mah:NumericUpDown.Style>
                    <Style TargetType="mah:NumericUpDown"
                           BasedOn="{StaticResource {x:Type mah:NumericUpDown}}">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=ComboBox, Path=SelectedIndex}"
                                         Value="2">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </mah:NumericUpDown.Style>
            </mah:NumericUpDown>

            <CheckBox IsChecked="{Binding InheritSettings}"
                      Grid.Row="1">
                <CheckBox.Style>
                    <Style TargetType="CheckBox">
                        <Setter Property="Visibility" Value="Visible" />
                        <Setter Property="Content" Value="Применить для всех корпусов" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding CountingAlgorythm}"
                                         Value="{x:Static viewModel:CountingTypes.Custom}">
                                <Setter Property="Content" Value="Сдвинуть остальные" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </CheckBox.Style>
            </CheckBox>

        </Grid>


        <TextBlock Grid.Row="6"
                   Text="Коды" />
        <TabControl Grid.Row="7"
                    ItemsSource="{Binding Codes}"
                    ToolTip="Каждый код с новой строки">
            <TabControl.ItemContainerStyle>
                <Style TargetType="TabItem">
                    <Setter Property="Header" Value="{Binding Number, StringFormat={}{0} под.}" />
                </Style>
            </TabControl.ItemContainerStyle>
            <TabControl.ContentTemplate>
                <DataTemplate>
                    <TextBox Text="{Binding Path=HomeCodes,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                             AcceptsReturn="True" />
                </DataTemplate>
            </TabControl.ContentTemplate>
        </TabControl>

        <TextBlock Grid.Row="8"
                   Text="Комментарии" />
        <TextBox Grid.Row="9"
                 TextWrapping="Wrap"
                 AcceptsReturn="True"
                 MaxLines="255"
                 Text="{Binding Comments, UpdateSourceTrigger=PropertyChanged}" />

        <StackPanel Grid.Row="10"
                    HorizontalAlignment="Right"
                    Orientation="Horizontal">
            <Button Content="Ok"
                    Margin="5"
                    MinWidth="50"
                    Command="{Binding SaveCommand}"
                    IsDefault="True"
                    Click="SuccessClose" />

            <Button Content="Close"
                    Margin="5"
                    MinWidth="50"
                    IsCancel="True"
                    Click="OnClose" />
        </StackPanel>
    </Grid>
</Window>